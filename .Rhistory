#cairo_pdf("plots/myst_phylo.pdf", width = 6, height = 10, family = "avenir")
right_panel <- cowplot::plot_grid(humpback_plot, fin_plot, blue_plot, sei_plot, minke_plot, right_plot, bowhead_plot, NULL,
ncol = 1, rel_heights = c(rep(1, nrow(myst_tips)), 0.35))
bottom_row <- cowplot::plot_grid(myst_phylo_plot, right_panel, rel_widths = c(1, 1))
bottom_row
dev.off()
#create and save full phylogeny plot for odontocetes
png("plots/odon_phylo.png", width = 6, height = nrow(odon_tips), units = "in", res = 600)
#cairo_pdf("plots/odon_phylo.pdf", width = 6, height = 10, family = "avenir")
right_panel <- cowplot::plot_grid(hectors_plot, commersons_plot, heavisides_plot, rissos_plot, bottlenose_plot, peales_plot, killer_plot, narrow_plot, sperm_plot, NULL,
ncol = 1, rel_heights = c(rep(1, nrow(odon_tips)), 0.35))
bottom_row <- cowplot::plot_grid(odon_phylo_plot, right_panel, rel_widths = c(1, 1))
bottom_row
dev.off()
killer_models$actual$position_scaled
confint(killer_models$actual$position_scaled, method = "Wald")
setwd("/Users/masonyoungblood/Documents/Work/Fall 2022/Conservatism/ConservatismModel")
source("functions.R")
setwd("/Users/masonyoungblood/Documents/Work/Fall 2022/Conservatism/ConservatismModel")
source("code/functions.R")
#load libraries
library(ggplot2)
library(cowplot)
#set parameters
n <- 50
t <- 500
cost <- 0.5
moves <- 2
#set random seed
set.seed(12345)
asocial <- model(pop_size = n, t = t, neg_cost = cost, n_moves = moves)
social <- model(pop_size = n, t = t, neg_cost = cost, n_moves = moves, gamma = 0.25, f = 2.5)
social
output <- asocial
strats <- do.call(rbind, parallel::mclapply(1:t, function(y){
c(length(which(output[[y]]$advertisement == 0 & output[[y]]$negotiation == 0)),
length(which(output[[y]]$advertisement == 1 & output[[y]]$negotiation == 0)),
length(which(output[[y]]$advertisement == 0 & output[[y]]$negotiation == 1)),
length(which(output[[y]]$advertisement == 1 & output[[y]]$negotiation == 1)))
}, mc.cores = 7))
quos <- do.call(rbind, parallel::mclapply(1:t, function(y){
as.numeric(table(factor(output[[y]]$status_quo, levels = 1:moves)))
}, mc.cores = 7))
strats_data <- data.frame(f = c(strats[, 1], strats[, 2], strats[, 3], strats[, 4])/n,
t = rep(1:t, 4),
strat = factor(rep(c("00", "10", "01", "11"), each = t), levels = c("00", "10", "01", "11")))
quos_data <- data.frame(f = unlist(lapply(1:moves, function(h){quos[, h]}))/n,
t = rep(1:t, moves),
quo = rep(as.character(1:moves), each = t))
strats_plot <- ggplot(strats_data) + geom_line(aes(x = t, y = f, group = strat, color = strat)) +
xlab(" ") + ylab("Proportion") +
scale_color_manual(name = "Strategy", values = c("#CC79A7", "#D55E00", "#009E73", "#0072B2")) +
scale_y_continuous(expand = c(0, 0), limits = c(0.1, 0.43)) +
theme_linedraw(base_size = 8) + theme(plot.title = element_text(face = "bold"), text = element_text(family = "Avenir Next"))
quos_plot <- ggplot(quos_data) + geom_line(aes(x = t, y = f, group = quo, color = quo)) +
xlab("Timestep") + ylab("Proportion") +
scale_color_manual(name = "Status Quo", values = c("#56B4E9", "#E69F00")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1), breaks = c(0, 0.5, 1)) +
theme_linedraw(base_size = 8) + theme(text = element_text(family = "Avenir Next"))
strats_plot
quos_plot
output <- social
strats <- do.call(rbind, parallel::mclapply(1:t, function(y){
c(length(which(output[[y]]$advertisement == 0 & output[[y]]$negotiation == 0)),
length(which(output[[y]]$advertisement == 1 & output[[y]]$negotiation == 0)),
length(which(output[[y]]$advertisement == 0 & output[[y]]$negotiation == 1)),
length(which(output[[y]]$advertisement == 1 & output[[y]]$negotiation == 1)))
}, mc.cores = 7))
quos <- do.call(rbind, parallel::mclapply(1:t, function(y){
as.numeric(table(factor(output[[y]]$status_quo, levels = 1:moves)))
}, mc.cores = 7))
strats_data <- data.frame(f = c(strats[, 1], strats[, 2], strats[, 3], strats[, 4])/n,
t = rep(1:t, 4),
strat = factor(rep(c("00", "10", "01", "11"), each = t), levels = c("00", "10", "01", "11")))
quos_data <- data.frame(f = unlist(lapply(1:moves, function(h){quos[, h]}))/n,
t = rep(1:t, moves),
quo = rep(as.character(1:moves), each = t))
quos_plot
output <- social
output
output <- social
strats <- do.call(rbind, parallel::mclapply(1:t, function(y){
c(length(which(output[[y]]$advertisement == 0 & output[[y]]$negotiation == 0)),
length(which(output[[y]]$advertisement == 1 & output[[y]]$negotiation == 0)),
length(which(output[[y]]$advertisement == 0 & output[[y]]$negotiation == 1)),
length(which(output[[y]]$advertisement == 1 & output[[y]]$negotiation == 1)))
}, mc.cores = 7))
quos <- do.call(rbind, parallel::mclapply(1:t, function(y){
as.numeric(table(factor(output[[y]]$status_quo, levels = 1:moves)))
}, mc.cores = 7))
strats_data <- data.frame(f = c(strats[, 1], strats[, 2], strats[, 3], strats[, 4])/n,
t = rep(1:t, 4),
strat = factor(rep(c("00", "10", "01", "11"), each = t), levels = c("00", "10", "01", "11")))
quos_data <- data.frame(f = unlist(lapply(1:moves, function(h){quos[, h]}))/n,
t = rep(1:t, moves),
quo = rep(as.character(1:moves), each = t))
strats_plot <- ggplot(strats_data) + geom_line(aes(x = t, y = f, group = strat, color = strat)) +
xlab(" ") + ylab("Proportion") +
scale_color_manual(name = "Strategy", values = c("#CC79A7", "#D55E00", "#009E73", "#0072B2")) +
scale_y_continuous(expand = c(0, 0), limits = c(0.1, 0.43)) +
theme_linedraw(base_size = 8) + theme(plot.title = element_text(face = "bold"), text = element_text(family = "Avenir Next"))
quos_plot <- ggplot(quos_data) + geom_line(aes(x = t, y = f, group = quo, color = quo)) +
xlab("Timestep") + ylab("Proportion") +
scale_color_manual(name = "Status Quo", values = c("#56B4E9", "#E69F00")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1), breaks = c(0, 0.5, 1)) +
theme_linedraw(base_size = 8) + theme(text = element_text(family = "Avenir Next"))
quos_plot
strats_plot
#set parameters
n <- 100
t <- 500
cost <- 0.5
moves <- 2
#set random seed
set.seed(12345)
asocial <- model(pop_size = n, t = t, neg_cost = cost, n_moves = moves)
social <- model(pop_size = n, t = t, neg_cost = cost, n_moves = moves, gamma = 0.25, f = 2.5)
output <- asocial
strats <- do.call(rbind, parallel::mclapply(1:t, function(y){
c(length(which(output[[y]]$advertisement == 0 & output[[y]]$negotiation == 0)),
length(which(output[[y]]$advertisement == 1 & output[[y]]$negotiation == 0)),
length(which(output[[y]]$advertisement == 0 & output[[y]]$negotiation == 1)),
length(which(output[[y]]$advertisement == 1 & output[[y]]$negotiation == 1)))
}, mc.cores = 7))
quos <- do.call(rbind, parallel::mclapply(1:t, function(y){
as.numeric(table(factor(output[[y]]$status_quo, levels = 1:moves)))
}, mc.cores = 7))
strats_data <- data.frame(f = c(strats[, 1], strats[, 2], strats[, 3], strats[, 4])/n,
t = rep(1:t, 4),
strat = factor(rep(c("00", "10", "01", "11"), each = t), levels = c("00", "10", "01", "11")))
quos_data <- data.frame(f = unlist(lapply(1:moves, function(h){quos[, h]}))/n,
t = rep(1:t, moves),
quo = rep(as.character(1:moves), each = t))
strats_plot <- ggplot(strats_data) + geom_line(aes(x = t, y = f, group = strat, color = strat)) +
xlab(" ") + ylab("Proportion") +
scale_color_manual(name = "Strategy", values = c("#CC79A7", "#D55E00", "#009E73", "#0072B2")) +
scale_y_continuous(expand = c(0, 0), limits = c(0.1, 0.43)) +
theme_linedraw(base_size = 8) + theme(plot.title = element_text(face = "bold"), text = element_text(family = "Avenir Next"))
quos_plot <- ggplot(quos_data) + geom_line(aes(x = t, y = f, group = quo, color = quo)) +
xlab("Timestep") + ylab("Proportion") +
scale_color_manual(name = "Status Quo", values = c("#56B4E9", "#E69F00")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1), breaks = c(0, 0.5, 1)) +
theme_linedraw(base_size = 8) + theme(text = element_text(family = "Avenir Next"))
quos_plot
strats_plot
output <- social
strats <- do.call(rbind, parallel::mclapply(1:t, function(y){
c(length(which(output[[y]]$advertisement == 0 & output[[y]]$negotiation == 0)),
length(which(output[[y]]$advertisement == 1 & output[[y]]$negotiation == 0)),
length(which(output[[y]]$advertisement == 0 & output[[y]]$negotiation == 1)),
length(which(output[[y]]$advertisement == 1 & output[[y]]$negotiation == 1)))
}, mc.cores = 7))
quos <- do.call(rbind, parallel::mclapply(1:t, function(y){
as.numeric(table(factor(output[[y]]$status_quo, levels = 1:moves)))
}, mc.cores = 7))
strats_data <- data.frame(f = c(strats[, 1], strats[, 2], strats[, 3], strats[, 4])/n,
t = rep(1:t, 4),
strat = factor(rep(c("00", "10", "01", "11"), each = t), levels = c("00", "10", "01", "11")))
quos_data <- data.frame(f = unlist(lapply(1:moves, function(h){quos[, h]}))/n,
t = rep(1:t, moves),
quo = rep(as.character(1:moves), each = t))
strats_plot <- ggplot(strats_data) + geom_line(aes(x = t, y = f, group = strat, color = strat)) +
xlab(" ") + ylab("Proportion") +
scale_color_manual(name = "Strategy", values = c("#CC79A7", "#D55E00", "#009E73", "#0072B2")) +
scale_y_continuous(expand = c(0, 0), limits = c(0.1, 0.43)) +
theme_linedraw(base_size = 8) + theme(plot.title = element_text(face = "bold"), text = element_text(family = "Avenir Next"))
quos_plot <- ggplot(quos_data) + geom_line(aes(x = t, y = f, group = quo, color = quo)) +
xlab("Timestep") + ylab("Proportion") +
scale_color_manual(name = "Status Quo", values = c("#56B4E9", "#E69F00")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1), breaks = c(0, 0.5, 1)) +
theme_linedraw(base_size = 8) + theme(text = element_text(family = "Avenir Next"))
quos_plot
#set parameters
n <- 1000
t <- 500
cost <- 0.5
moves <- 2
#set random seed
set.seed(123)
asocial <- model(pop_size = n, t = t, neg_cost = cost, n_moves = moves)
social <- model(pop_size = n, t = t, neg_cost = cost, n_moves = moves, gamma = 0.25, f = 2.5)
output <- social
strats <- do.call(rbind, parallel::mclapply(1:t, function(y){
c(length(which(output[[y]]$advertisement == 0 & output[[y]]$negotiation == 0)),
length(which(output[[y]]$advertisement == 1 & output[[y]]$negotiation == 0)),
length(which(output[[y]]$advertisement == 0 & output[[y]]$negotiation == 1)),
length(which(output[[y]]$advertisement == 1 & output[[y]]$negotiation == 1)))
}, mc.cores = 7))
quos <- do.call(rbind, parallel::mclapply(1:t, function(y){
as.numeric(table(factor(output[[y]]$status_quo, levels = 1:moves)))
}, mc.cores = 7))
strats_data <- data.frame(f = c(strats[, 1], strats[, 2], strats[, 3], strats[, 4])/n,
t = rep(1:t, 4),
strat = factor(rep(c("00", "10", "01", "11"), each = t), levels = c("00", "10", "01", "11")))
quos_data <- data.frame(f = unlist(lapply(1:moves, function(h){quos[, h]}))/n,
t = rep(1:t, moves),
quo = rep(as.character(1:moves), each = t))
strats_plot <- ggplot(strats_data) + geom_line(aes(x = t, y = f, group = strat, color = strat)) +
xlab(" ") + ylab("Proportion") +
scale_color_manual(name = "Strategy", values = c("#CC79A7", "#D55E00", "#009E73", "#0072B2")) +
scale_y_continuous(expand = c(0, 0), limits = c(0.1, 0.43)) +
theme_linedraw(base_size = 8) + theme(plot.title = element_text(face = "bold"), text = element_text(family = "Avenir Next"))
quos_plot <- ggplot(quos_data) + geom_line(aes(x = t, y = f, group = quo, color = quo)) +
xlab("Timestep") + ylab("Proportion") +
scale_color_manual(name = "Status Quo", values = c("#56B4E9", "#E69F00")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1), breaks = c(0, 0.5, 1)) +
theme_linedraw(base_size = 8) + theme(text = element_text(family = "Avenir Next"))
strats_plot
quos_plot
output <- asocial
strats <- do.call(rbind, parallel::mclapply(1:t, function(y){
c(length(which(output[[y]]$advertisement == 0 & output[[y]]$negotiation == 0)),
length(which(output[[y]]$advertisement == 1 & output[[y]]$negotiation == 0)),
length(which(output[[y]]$advertisement == 0 & output[[y]]$negotiation == 1)),
length(which(output[[y]]$advertisement == 1 & output[[y]]$negotiation == 1)))
}, mc.cores = 7))
quos <- do.call(rbind, parallel::mclapply(1:t, function(y){
as.numeric(table(factor(output[[y]]$status_quo, levels = 1:moves)))
}, mc.cores = 7))
strats_data <- data.frame(f = c(strats[, 1], strats[, 2], strats[, 3], strats[, 4])/n,
t = rep(1:t, 4),
strat = factor(rep(c("00", "10", "01", "11"), each = t), levels = c("00", "10", "01", "11")))
quos_data <- data.frame(f = unlist(lapply(1:moves, function(h){quos[, h]}))/n,
t = rep(1:t, moves),
quo = rep(as.character(1:moves), each = t))
strats_plot <- ggplot(strats_data) + geom_line(aes(x = t, y = f, group = strat, color = strat)) +
xlab(" ") + ylab("Proportion") +
scale_color_manual(name = "Strategy", values = c("#CC79A7", "#D55E00", "#009E73", "#0072B2")) +
scale_y_continuous(expand = c(0, 0), limits = c(0.1, 0.43)) +
theme_linedraw(base_size = 8) + theme(plot.title = element_text(face = "bold"), text = element_text(family = "Avenir Next"))
quos_plot <- ggplot(quos_data) + geom_line(aes(x = t, y = f, group = quo, color = quo)) +
xlab("Timestep") + ylab("Proportion") +
scale_color_manual(name = "Status Quo", values = c("#56B4E9", "#E69F00")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1), breaks = c(0, 0.5, 1)) +
theme_linedraw(base_size = 8) + theme(text = element_text(family = "Avenir Next"))
quos_plot
strats_plot
strats_plot <- ggplot(strats_data) + geom_line(aes(x = t, y = f, group = strat, color = strat)) +
xlab(" ") + ylab("Proportion") +
scale_color_manual(name = "Strategy", values = c("#CC79A7", "#D55E00", "#009E73", "#0072B2")) +
scale_y_continuous(expand = c(0, 0), limits = c(0.1, 0.6)) +
theme_linedraw(base_size = 8) + theme(plot.title = element_text(face = "bold"), text = element_text(family = "Avenir Next"))
strats_plot
output <- social
strats <- do.call(rbind, parallel::mclapply(1:t, function(y){
c(length(which(output[[y]]$advertisement == 0 & output[[y]]$negotiation == 0)),
length(which(output[[y]]$advertisement == 1 & output[[y]]$negotiation == 0)),
length(which(output[[y]]$advertisement == 0 & output[[y]]$negotiation == 1)),
length(which(output[[y]]$advertisement == 1 & output[[y]]$negotiation == 1)))
}, mc.cores = 7))
quos <- do.call(rbind, parallel::mclapply(1:t, function(y){
as.numeric(table(factor(output[[y]]$status_quo, levels = 1:moves)))
}, mc.cores = 7))
strats_data <- data.frame(f = c(strats[, 1], strats[, 2], strats[, 3], strats[, 4])/n,
t = rep(1:t, 4),
strat = factor(rep(c("00", "10", "01", "11"), each = t), levels = c("00", "10", "01", "11")))
quos_data <- data.frame(f = unlist(lapply(1:moves, function(h){quos[, h]}))/n,
t = rep(1:t, moves),
quo = rep(as.character(1:moves), each = t))
strats_plot <- ggplot(strats_data) + geom_line(aes(x = t, y = f, group = strat, color = strat)) +
xlab(" ") + ylab("Proportion") +
scale_color_manual(name = "Strategy", values = c("#CC79A7", "#D55E00", "#009E73", "#0072B2")) +
scale_y_continuous(expand = c(0, 0), limits = c(0.1, 0.6)) +
theme_linedraw(base_size = 8) + theme(plot.title = element_text(face = "bold"), text = element_text(family = "Avenir Next"))
quos_plot <- ggplot(quos_data) + geom_line(aes(x = t, y = f, group = quo, color = quo)) +
xlab("Timestep") + ylab("Proportion") +
scale_color_manual(name = "Status Quo", values = c("#56B4E9", "#E69F00")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1), breaks = c(0, 0.5, 1)) +
theme_linedraw(base_size = 8) + theme(text = element_text(family = "Avenir Next"))
strats_plot
basic_dynamics <- list(asocial = asocial, social = social)
save(basic_dynamics, file = "/basic_dynamics.RData")
save(basic_dynamics, file = "data/basic_dynamics.RData")
#for the two models
plots <- lapply(1:2, function(x){
#process model
if(x == 1){output <- asocial}
if(x == 2){output <- asocial}
#compute frequency of each strategy and status quo move
strats <- do.call(rbind, parallel::mclapply(1:t, function(y){
c(length(which(output[[y]]$advertisement == 0 & output[[y]]$negotiation == 0)),
length(which(output[[y]]$advertisement == 1 & output[[y]]$negotiation == 0)),
length(which(output[[y]]$advertisement == 0 & output[[y]]$negotiation == 1)),
length(which(output[[y]]$advertisement == 1 & output[[y]]$negotiation == 1)))
}, mc.cores = 7))
quos <- do.call(rbind, parallel::mclapply(1:t, function(y){
as.numeric(table(factor(output[[y]]$status_quo, levels = 1:moves)))
}, mc.cores = 7))
#combine into data for plotting
strats_data <- data.frame(f = c(strats[, 1], strats[, 2], strats[, 3], strats[, 4])/n,
t = rep(1:t, 4),
strat = factor(rep(c("00", "10", "01", "11"), each = t), levels = c("00", "10", "01", "11")))
quos_data <- data.frame(f = unlist(lapply(1:moves, function(h){quos[, h]}))/n,
t = rep(1:t, moves),
quo = rep(as.character(1:moves), each = t))
#produce plot of the strategies over time
strats_plot <- ggplot(strats_data) + geom_line(aes(x = t, y = f, group = strat, color = strat)) +
xlab(" ") + ylab("Proportion") +
scale_color_manual(name = "Strategy", values = c("#CC79A7", "#D55E00", "#009E73", "#0072B2")) +
scale_y_continuous(expand = c(0, 0), limits = c(0.1, 0.5)) +
theme_linedraw(base_size = 8) + theme(plot.title = element_text(face = "bold"), text = element_text(family = "Avenir Next"))
#produce plot of the status quo moves over time
quos_plot <- ggplot(quos_data) + geom_line(aes(x = t, y = f, group = quo, color = quo)) +
xlab("Timestep") + ylab("Proportion") +
scale_color_manual(name = "Status Quo", values = c("#56B4E9", "#E69F00")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1), breaks = c(0, 0.5, 1)) +
theme_linedraw(base_size = 8) + theme(text = element_text(family = "Avenir Next"))
return(list(strats_plot, quos_plot))
})
plots[[1]][[1]]
plots[[2]][[1]]
#for the two models
plots <- lapply(1:2, function(x){
#process model
if(x == 1){output <- asocial}
if(x == 2){output <- social}
#compute frequency of each strategy and status quo move
strats <- do.call(rbind, parallel::mclapply(1:t, function(y){
c(length(which(output[[y]]$advertisement == 0 & output[[y]]$negotiation == 0)),
length(which(output[[y]]$advertisement == 1 & output[[y]]$negotiation == 0)),
length(which(output[[y]]$advertisement == 0 & output[[y]]$negotiation == 1)),
length(which(output[[y]]$advertisement == 1 & output[[y]]$negotiation == 1)))
}, mc.cores = 7))
quos <- do.call(rbind, parallel::mclapply(1:t, function(y){
as.numeric(table(factor(output[[y]]$status_quo, levels = 1:moves)))
}, mc.cores = 7))
#combine into data for plotting
strats_data <- data.frame(f = c(strats[, 1], strats[, 2], strats[, 3], strats[, 4])/n,
t = rep(1:t, 4),
strat = factor(rep(c("00", "10", "01", "11"), each = t), levels = c("00", "10", "01", "11")))
quos_data <- data.frame(f = unlist(lapply(1:moves, function(h){quos[, h]}))/n,
t = rep(1:t, moves),
quo = rep(as.character(1:moves), each = t))
#produce plot of the strategies over time
strats_plot <- ggplot(strats_data) + geom_line(aes(x = t, y = f, group = strat, color = strat)) +
xlab(" ") + ylab("Proportion") +
scale_color_manual(name = "Strategy", values = c("#CC79A7", "#D55E00", "#009E73", "#0072B2")) +
scale_y_continuous(expand = c(0, 0), limits = c(0.1, 0.5)) +
theme_linedraw(base_size = 8) + theme(plot.title = element_text(face = "bold"), text = element_text(family = "Avenir Next"))
#produce plot of the status quo moves over time
quos_plot <- ggplot(quos_data) + geom_line(aes(x = t, y = f, group = quo, color = quo)) +
xlab("Timestep") + ylab("Proportion") +
scale_color_manual(name = "Status Quo", values = c("#56B4E9", "#E69F00")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1), breaks = c(0, 0.5, 1)) +
theme_linedraw(base_size = 8) + theme(text = element_text(family = "Avenir Next"))
return(list(strats_plot, quos_plot))
})
plots[[1]][[1]]
plots[[2]][[1]]
plots[[1]][[2]]
plots[[2]][[2]]
plot_grid(plots[[1]][[1]])
plot_grid(plots[[2]][[1]], plots[[1]][[1]])
plot_grid(plots[[1]][[2]], plots[[1]][[1]])
#for the two models
plots <- lapply(1:2, function(x){
#process model
if(x == 1){output <- asocial}
if(x == 2){output <- social}
#compute frequency of each strategy and status quo move
strats <- do.call(rbind, parallel::mclapply(1:t, function(y){
c(length(which(output[[y]]$advertisement == 0 & output[[y]]$negotiation == 0)),
length(which(output[[y]]$advertisement == 1 & output[[y]]$negotiation == 0)),
length(which(output[[y]]$advertisement == 0 & output[[y]]$negotiation == 1)),
length(which(output[[y]]$advertisement == 1 & output[[y]]$negotiation == 1)))
}, mc.cores = 7))
quos <- do.call(rbind, parallel::mclapply(1:t, function(y){
as.numeric(table(factor(output[[y]]$status_quo, levels = 1:moves)))
}, mc.cores = 7))
#combine into data for plotting
strats_data <- data.frame(f = c(strats[, 1], strats[, 2], strats[, 3], strats[, 4])/n,
t = rep(1:t, 4),
strat = factor(rep(c("00", "10", "01", "11"), each = t), levels = c("00", "10", "01", "11")))
quos_data <- data.frame(f = unlist(lapply(1:moves, function(h){quos[, h]}))/n,
t = rep(1:t, moves),
quo = rep(as.character(1:moves), each = t))
#produce plot of the strategies over time
strats_plot <- ggplot(strats_data) + geom_line(aes(x = t, y = f, group = strat, color = strat)) +
xlab(" ") + ylab("Proportion") +
scale_color_manual(name = "Strategy", values = c("#CC79A7", "#D55E00", "#009E73", "#0072B2")) +
scale_y_continuous(expand = c(0, 0), limits = c(0.1, 0.5)) +
ggtitle(" ") +
theme_linedraw(base_size = 8) + theme(plot.title = element_text(face = "bold"), text = element_text(family = "Avenir Next"), legend.position = "bottom")
#produce plot of the status quo moves over time
quos_plot <- ggplot(quos_data) + geom_line(aes(x = t, y = f, group = quo, color = quo)) +
xlab("Timestep") + ylab("Proportion") +
scale_color_manual(name = "Status Quo", values = c("#56B4E9", "#E69F00")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1), breaks = c(0, 0.5, 1)) +
ggtitle(ifelse(x == 1, "Asocial", "Social")) +
theme_linedraw(base_size = 8) + theme(text = element_text(family = "Avenir Next"), legend.position = "bottom")
return(list(strats_plot, quos_plot))
})
plot_grid(plots[[1]][[2]], plots[[1]][[1]])
#for the two models
plots <- lapply(1:2, function(x){
#process model
if(x == 1){output <- asocial}
if(x == 2){output <- social}
#compute frequency of each strategy and status quo move
strats <- do.call(rbind, parallel::mclapply(1:t, function(y){
c(length(which(output[[y]]$advertisement == 0 & output[[y]]$negotiation == 0)),
length(which(output[[y]]$advertisement == 1 & output[[y]]$negotiation == 0)),
length(which(output[[y]]$advertisement == 0 & output[[y]]$negotiation == 1)),
length(which(output[[y]]$advertisement == 1 & output[[y]]$negotiation == 1)))
}, mc.cores = 7))
quos <- do.call(rbind, parallel::mclapply(1:t, function(y){
as.numeric(table(factor(output[[y]]$status_quo, levels = 1:moves)))
}, mc.cores = 7))
#combine into data for plotting
strats_data <- data.frame(f = c(strats[, 1], strats[, 2], strats[, 3], strats[, 4])/n,
t = rep(1:t, 4),
strat = factor(rep(c("00", "10", "01", "11"), each = t), levels = c("00", "10", "01", "11")))
quos_data <- data.frame(f = unlist(lapply(1:moves, function(h){quos[, h]}))/n,
t = rep(1:t, moves),
quo = rep(as.character(1:moves), each = t))
#produce plot of the strategies over time
strats_plot <- ggplot(strats_data) + geom_line(aes(x = t, y = f, group = strat, color = strat)) +
xlab("Timestep") + ylab("Proportion") +
scale_color_manual(name = "Strategy", values = c("#CC79A7", "#D55E00", "#009E73", "#0072B2")) +
scale_y_continuous(expand = c(0, 0), limits = c(0.1, 0.5)) +
ggtitle(" ") +
theme_linedraw(base_size = 8) + theme(plot.title = element_text(face = "bold"), text = element_text(family = "Avenir Next"), legend.position = "bottom")
#produce plot of the status quo moves over time
quos_plot <- ggplot(quos_data) + geom_line(aes(x = t, y = f, group = quo, color = quo)) +
xlab("Timestep") + ylab("Proportion") +
scale_color_manual(name = "Status Quo", values = c("#56B4E9", "#E69F00")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1), breaks = c(0, 0.5, 1)) +
ggtitle(ifelse(x == 1, "Asocial", "Social")) +
theme_linedraw(base_size = 8) + theme(text = element_text(family = "Avenir Next"), legend.position = "bottom")
return(list(strats_plot, quos_plot))
})
plot_grid(plots[[1]][[2]], plots[[1]][[1]])
plot_grid(plot_grid(plots[[1]][[2]], plots[[1]][[1]]), plot_grid(plots[[2]][[2]], plots[[2]][[1]]), plot_grid(get_legend(plots[[1]][[2]]), get_legend(plots[[1]][[1]])), nrow = 3)
plot_grid(plot_grid(plots[[1]][[2]] + theme(legend.position = "none"), plots[[1]][[1]]), plot_grid(plots[[2]][[2]], plots[[2]][[1]]), plot_grid(get_legend(plots[[1]][[2]]), get_legend(plots[[1]][[1]])), nrow = 3)
png("plots/basic_dynamics.png", width = 5, height = 6, units = "in", res = 1200)
plot_grid(plot_grid(plots[[1]][[2]] + theme(legend.position = "none"), plots[[1]][[1]] + theme(legend.position = "none")),
plot_grid(plots[[2]][[2]] + theme(legend.position = "none"), plots[[2]][[1]] + theme(legend.position = "none")),
plot_grid(get_legend(plots[[1]][[2]]), get_legend(plots[[1]][[1]])), nrow = 3, rel_heights = c(1, 1, 0.1))
dev.off()
png("plots/basic_dynamics.png", width = 6.8, height = 4, units = "in", res = 1200)
plot_grid(plot_grid(plots[[1]][[2]] + theme(legend.position = "none"), plots[[1]][[1]] + theme(legend.position = "none")),
plot_grid(plots[[2]][[2]] + theme(legend.position = "none"), plots[[2]][[1]] + theme(legend.position = "none")),
plot_grid(get_legend(plots[[1]][[2]]), get_legend(plots[[1]][[1]])), nrow = 3, rel_heights = c(1, 1, 0.1))
dev.off()
png("plots/basic_dynamics.png", width = 6.8, height = 4, units = "in", res = 1200)
plot_grid(plot_grid(plots[[1]][[2]] + theme(legend.position = "none"), plots[[1]][[1]] + theme(legend.position = "none")),
plot_grid(plots[[2]][[2]] + theme(legend.position = "none"), plots[[2]][[1]] + theme(legend.position = "none")),
plot_grid(get_legend(plots[[1]][[2]]), get_legend(plots[[1]][[1]])), nrow = 3, rel_heights = c(1, 1, 0.3))
dev.off()
png("plots/basic_dynamics.png", width = 6.8, height = 4, units = "in", res = 1200)
plot_grid(plot_grid(plots[[1]][[2]] + theme(legend.position = "none"), plots[[1]][[1]] + theme(legend.position = "none")),
plot_grid(plots[[2]][[2]] + theme(legend.position = "none"), plots[[2]][[1]] + theme(legend.position = "none")),
plot_grid(get_legend(plots[[1]][[2]]), get_legend(plots[[1]][[1]])), nrow = 3, rel_height = c(1, 1, 0.3))
dev.off()
plot_grid(get_legend(plots[[1]][[2]]), get_legend(plots[[1]][[1]]))
warnings()
png("plots/basic_dynamics.png", width = 6.8, height = 4, units = "in", res = 1200)
plot_grid(plot_grid(plots[[1]][[2]] + theme(legend.position = "none"), plots[[1]][[1]] + theme(legend.position = "none")),
plot_grid(plots[[2]][[2]] + theme(legend.position = "none"), plots[[2]][[1]] + theme(legend.position = "none")),
plot_grid(get_plot_component(plots[[1]][[2]], "guide-box-bottom", return_all = TRUE), get_plot_component(plots[[1]][[1]], "guide-box-bottom", return_all = TRUE)),
nrow = 3, rel_heights = c(1, 1, 0.1))
dev.off()
png("plots/basic_dynamics.png", width = 6.8, height = 4, units = "in", res = 1200)
plot_grid(plot_grid(plots[[1]][[2]] + theme(legend.position = "none"), plots[[1]][[1]] + theme(legend.position = "none")),
plot_grid(plots[[2]][[2]] + theme(legend.position = "none"), plots[[2]][[1]] + theme(legend.position = "none")),
plot_grid(get_plot_component(plots[[1]][[2]], "guide-box-bottom", return_all = TRUE), get_plot_component(plots[[1]][[1]], "guide-box-bottom", return_all = TRUE)),
nrow = 3, rel_heights = c(1, 1, 0.2))
dev.off()
#for the two models
plots <- lapply(1:2, function(x){
#process model
if(x == 1){output <- asocial}
if(x == 2){output <- social}
#compute frequency of each strategy and status quo move
strats <- do.call(rbind, parallel::mclapply(1:t, function(y){
c(length(which(output[[y]]$advertisement == 0 & output[[y]]$negotiation == 0)),
length(which(output[[y]]$advertisement == 1 & output[[y]]$negotiation == 0)),
length(which(output[[y]]$advertisement == 0 & output[[y]]$negotiation == 1)),
length(which(output[[y]]$advertisement == 1 & output[[y]]$negotiation == 1)))
}, mc.cores = 7))
quos <- do.call(rbind, parallel::mclapply(1:t, function(y){
as.numeric(table(factor(output[[y]]$status_quo, levels = 1:moves)))
}, mc.cores = 7))
#combine into data for plotting
strats_data <- data.frame(f = c(strats[, 1], strats[, 2], strats[, 3], strats[, 4])/n,
t = rep(1:t, 4),
strat = factor(rep(c("00", "10", "01", "11"), each = t), levels = c("00", "10", "01", "11")))
quos_data <- data.frame(f = unlist(lapply(1:moves, function(h){quos[, h]}))/n,
t = rep(1:t, moves),
quo = rep(as.character(1:moves), each = t))
#produce plot of the strategies over time
strats_plot <- ggplot(strats_data) + geom_line(aes(x = t, y = f, group = strat, color = strat)) +
xlab("Timestep") + ylab("Proportion") +
scale_color_manual(name = "Strategy", values = c("#CC79A7", "#D55E00", "#009E73", "#0072B2")) +
scale_y_continuous(expand = c(0, 0), limits = c(0.1, 0.5)) +
ggtitle(" ") +
theme_linedraw(base_size = 8) + theme(plot.title = element_text(face = "bold"), text = element_text(family = "Avenir Next"), legend.position = "bottom")
#produce plot of the status quo moves over time
quos_plot <- ggplot(quos_data) + geom_line(aes(x = t, y = f, group = quo, color = quo)) +
xlab("Timestep") + ylab("Proportion") +
scale_color_manual(name = "Status Quo", values = c("#56B4E9", "#E69F00")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1), breaks = c(0, 0.5, 1)) +
ggtitle(ifelse(x == 1, "Asocial", "Social")) +
theme_linedraw(base_size = 8) + theme(plot.title = element_text(face = "bold"), text = element_text(family = "Avenir Next"), legend.position = "bottom")
return(list(strats_plot, quos_plot))
})
png("plots/basic_dynamics.png", width = 6.8, height = 4, units = "in", res = 1200)
plot_grid(plot_grid(plots[[1]][[2]] + theme(legend.position = "none"), plots[[1]][[1]] + theme(legend.position = "none")),
plot_grid(plots[[2]][[2]] + theme(legend.position = "none"), plots[[2]][[1]] + theme(legend.position = "none")),
plot_grid(get_plot_component(plots[[1]][[2]], "guide-box-bottom", return_all = TRUE), get_plot_component(plots[[1]][[1]], "guide-box-bottom", return_all = TRUE)),
nrow = 3, rel_heights = c(1, 1, 0.2))
dev.off()
