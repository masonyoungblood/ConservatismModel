# model <- stan_mvmer(formula = list(
#   adv ~ power + diff + (1|neg_cost) + (1|n_moves),
#   neg ~ power + diff + (1|neg_cost) + (1|n_moves)),
#   family = list(binomial(link = "logit"), binomial(link = "logit")),
#   data = data, algorithm = "meanfield")
# #data = data, algorithm = "sampling", cores = 6, chains = 6)
# #algorithm = "meanfield", tol_rel_obj = 1e-10, iter = 1e3, elbo_samples = 10, eval_elbo = 10, adapt_iter = 100, grad_samples = 10)
#
# save(model, file = paste0("marginal_models/", ifelse(i == 1, "reinforcement", "rational"), "_marginal_model.RData"))
load(paste0("marginal_models/", ifelse(i == 1, "reinforcement", "rational"), "_marginal_model.RData"))
accuracy_data <- data.frame(adv = posterior_predict(model, m = 1, draws = 1)[1, ], neg = posterior_predict(model, m = 2, draws = 1)[1, ])
accuracy <- signif(length(which(accuracy_data$adv ==  data$adv & accuracy_data$neg ==  data$neg))/nrow(accuracy_data), 2)
marginal_effects <- lapply(c(-3, -2, -1, 0, 1, 2, 3), function(x){
lapply(c(-3, -2, -1, 0, 1, 2, 3), function(y){
temp1 <- posterior_predict(object = model, newdata =
data.frame(power = x, diff = y),
m = 1, draws = 1000, re.form = NA)
temp2 <- posterior_predict(object = model, newdata =
data.frame(power = x, diff = y),
m = 2, draws = 1000, re.form = NA)
prop.table(table(factor(paste0(c(temp1), c(temp2)), levels = c("00", "10", "01", "11"))))
})
})
sds <- c(-3, -2, -1, 0, 1, 2, 3)
plot_data <- expand.grid(sds, sds)[, c(2, 1)]
colnames(plot_data) <- c("x", "y")
plot_data$max <- NA
for(x in 1:length(sds)){
for(y in 1:length(sds)){
plot_data$max[which(plot_data$x == sds[x] & plot_data$y == sds[y])] <- which.max(marginal_effects[[x]][[y]])
}
}
max_plot <- ggplot(data = plot_data, aes(x = x, y = y, fill = factor(max, levels = c(1, 2, 3, 4)))) + geom_tile() + xlab("Power SD") + ylab("Pref. Diff. SD") +
scale_fill_manual(name = "Predicted\nStrategy", values = c("#CC79A7", "#D55E00", "#009E73", "#0072B2"), labels = c("00", "10", "01", "11"), drop = FALSE) +
ggtitle(paste0(ifelse(i == 1, "Reinforcement", "Rational"), " Model (Acc. = ", accuracy, ")")) + theme_linedraw(base_size = 8) +
scale_x_continuous(expand = c(0,0)) + scale_y_continuous(expand = c(0,0)) +
theme(plot.title = element_text(face = "bold"))
assign(paste0(ifelse(i == 1, "reinforcement", "rational"), "_marginal_plot"), max_plot)
max_plot
set.seed(123)
i <- 1
#MANUALLY LOOP!!!
if(i == 1){data <- reinforcement_data}
if(i == 2){data <- rational_data}
# #accuracy of full MCMC on pop size of 500 is no better than meanfield on pop size of 2000, so doing latter...
# model <- stan_mvmer(formula = list(
#   adv ~ power + diff + (1|neg_cost) + (1|n_moves),
#   neg ~ power + diff + (1|neg_cost) + (1|n_moves)),
#   family = list(binomial(link = "logit"), binomial(link = "logit")),
#   data = data, algorithm = "meanfield")
# #data = data, algorithm = "sampling", cores = 6, chains = 6)
# #algorithm = "meanfield", tol_rel_obj = 1e-10, iter = 1e3, elbo_samples = 10, eval_elbo = 10, adapt_iter = 100, grad_samples = 10)
#
# save(model, file = paste0("marginal_models/", ifelse(i == 1, "reinforcement", "rational"), "_marginal_model.RData"))
load(paste0("marginal_models/", ifelse(i == 1, "reinforcement", "rational"), "_marginal_model.RData"))
accuracy_data <- data.frame(adv = posterior_predict(model, m = 1, draws = 1)[1, ], neg = posterior_predict(model, m = 2, draws = 1)[1, ])
accuracy <- signif(length(which(accuracy_data$adv ==  data$adv & accuracy_data$neg ==  data$neg))/nrow(accuracy_data), 2)
marginal_effects <- lapply(c(-3, -2, -1, 0, 1, 2, 3), function(x){
lapply(c(-3, -2, -1, 0, 1, 2, 3), function(y){
temp1 <- posterior_predict(object = model, newdata =
data.frame(power = x, diff = y),
m = 1, draws = 1000, re.form = NA)
temp2 <- posterior_predict(object = model, newdata =
data.frame(power = x, diff = y),
m = 2, draws = 1000, re.form = NA)
prop.table(table(factor(paste0(c(temp1), c(temp2)), levels = c("00", "10", "01", "11"))))
})
})
sds <- c(-3, -2, -1, 0, 1, 2, 3)
plot_data <- expand.grid(sds, sds)[, c(2, 1)]
colnames(plot_data) <- c("x", "y")
plot_data$max <- NA
for(x in 1:length(sds)){
for(y in 1:length(sds)){
plot_data$max[which(plot_data$x == sds[x] & plot_data$y == sds[y])] <- which.max(marginal_effects[[x]][[y]])
}
}
max_plot <- ggplot(data = plot_data, aes(x = x, y = y, fill = factor(max, levels = c(1, 2, 3, 4)))) + geom_tile() + xlab("Power SD") + ylab("Pref. Diff. SD") +
scale_fill_manual(name = "Predicted\nStrategy", values = c("#CC79A7", "#D55E00", "#009E73", "#0072B2"), labels = c("00", "10", "01", "11"), drop = FALSE) +
ggtitle(paste0(ifelse(i == 1, "Reinforcement", "Rational"), " Model (Acc. = ", accuracy, ")")) + theme_linedraw(base_size = 8) +
scale_x_continuous(expand = c(0,0)) + scale_y_continuous(expand = c(0,0)) +
theme(plot.title = element_text(face = "bold"))
assign(paste0(ifelse(i == 1, "reinforcement", "rational"), "_marginal_plot"), max_plot)
max_plot
rm(list = c("data", "model", "plot_data", "max_plot", "accuracy", "accuracy_data"))
i
i <- 2
if(i == 1){data <- reinforcement_data}
if(i == 2){data <- rational_data}
# #accuracy of full MCMC on pop size of 500 is no better than meanfield on pop size of 2000, so doing latter...
# model <- stan_mvmer(formula = list(
#   adv ~ power + diff + (1|neg_cost) + (1|n_moves),
#   neg ~ power + diff + (1|neg_cost) + (1|n_moves)),
#   family = list(binomial(link = "logit"), binomial(link = "logit")),
#   data = data, algorithm = "meanfield")
# #data = data, algorithm = "sampling", cores = 6, chains = 6)
# #algorithm = "meanfield", tol_rel_obj = 1e-10, iter = 1e3, elbo_samples = 10, eval_elbo = 10, adapt_iter = 100, grad_samples = 10)
#
# save(model, file = paste0("marginal_models/", ifelse(i == 1, "reinforcement", "rational"), "_marginal_model.RData"))
load(paste0("marginal_models/", ifelse(i == 1, "reinforcement", "rational"), "_marginal_model.RData"))
accuracy_data <- data.frame(adv = posterior_predict(model, m = 1, draws = 1)[1, ], neg = posterior_predict(model, m = 2, draws = 1)[1, ])
accuracy <- signif(length(which(accuracy_data$adv ==  data$adv & accuracy_data$neg ==  data$neg))/nrow(accuracy_data), 2)
marginal_effects <- lapply(c(-3, -2, -1, 0, 1, 2, 3), function(x){
lapply(c(-3, -2, -1, 0, 1, 2, 3), function(y){
temp1 <- posterior_predict(object = model, newdata =
data.frame(power = x, diff = y),
m = 1, draws = 1000, re.form = NA)
temp2 <- posterior_predict(object = model, newdata =
data.frame(power = x, diff = y),
m = 2, draws = 1000, re.form = NA)
prop.table(table(factor(paste0(c(temp1), c(temp2)), levels = c("00", "10", "01", "11"))))
})
})
sds <- c(-3, -2, -1, 0, 1, 2, 3)
plot_data <- expand.grid(sds, sds)[, c(2, 1)]
colnames(plot_data) <- c("x", "y")
plot_data$max <- NA
for(x in 1:length(sds)){
for(y in 1:length(sds)){
plot_data$max[which(plot_data$x == sds[x] & plot_data$y == sds[y])] <- which.max(marginal_effects[[x]][[y]])
}
}
max_plot <- ggplot(data = plot_data, aes(x = x, y = y, fill = factor(max, levels = c(1, 2, 3, 4)))) + geom_tile() + xlab("Power SD") + ylab("Pref. Diff. SD") +
scale_fill_manual(name = "Predicted\nStrategy", values = c("#CC79A7", "#D55E00", "#009E73", "#0072B2"), labels = c("00", "10", "01", "11"), drop = FALSE) +
ggtitle(paste0(ifelse(i == 1, "Reinforcement", "Rational"), " Model (Acc. = ", accuracy, ")")) + theme_linedraw(base_size = 8) +
scale_x_continuous(expand = c(0,0)) + scale_y_continuous(expand = c(0,0)) +
theme(plot.title = element_text(face = "bold"))
assign(paste0(ifelse(i == 1, "reinforcement", "rational"), "_marginal_plot"), max_plot)
max_plot
rm(list = c("data", "model", "plot_data", "max_plot", "accuracy", "accuracy_data"))
#END MANUAL LOOP
png("model_plots/marginal_heatmaps.png", width = 6.2, height = 3, units = "in", res = 300)
plot_grid(reinforcement_marginal_plot + theme(legend.position = "none"), rational_marginal_plot + theme(legend.position = "none"),
get_legend(reinforcement_marginal_plot), nrow = 1, rel_widths = c(1, 1, 0.2))
dev.off()
setwd("~/Documents/Work/Fall 2022/Conservatism/ConservatismModel")
source("functions.R")
library(ggplot2)
library(ggsankey)
library(dplyr)
library(networkD3)
#set parameters
pop_size <- 2000
t <- 10
neg_cost <- 5
n_moves <- 7
#run model
output <- model(pop_size = pop_size, t = t, neg_cost = neg_cost, n_moves = n_moves, delta = 0, lambda = 5, pref_payoff = TRUE, static_prefs = TRUE, networked = FALSE)
ind_arcs <- lapply(1:pop_size, function(x){sapply(1:t, function(y){paste0(as.numeric(unlist(c(output[[y]][x, 2:3]))), collapse = "")})})
ind_arcs_sankey <- do.call(rbind, lapply(1:pop_size, function(x){do.call(rbind, lapply(1:(t-1), function(y){data.frame(x = y, next_x = y+1, node = ind_arcs[[x]][y], next_node = ind_arcs[[x]][y+1])}))}))
ind_arcs_sankey$node <- factor(ind_arcs_sankey$node, levels = c("00", "10", "01", "11"))
ind_arcs_sankey$next_node <- factor(ind_arcs_sankey$next_node, levels = c("00", "10", "01", "11"))
#png("~/Documents/Work/Fall 2022/Conservatism/model_plots/sankey_example.png", width = 12, height = 4, units = "in", res = 300)
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(0.5, t) + ylim(-350, 350) +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom")
#png("~/Documents/Work/Fall 2022/Conservatism/model_plots/sankey_example.png", width = 12, height = 4, units = "in", res = 300)
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(0.5, t) + ylim(-350, 350) +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom")
png("~/Documents/Work/Fall 2022/Conservatism/model_plots/sankey_example.png", width = 12, height = 4, units = "in", res = 300)
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(0.5, t) + ylim(-350, 350) +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom")
dev.off()
ind_arcs
ind_arcs_sankey
ind_arcs <- lapply(1:pop_size, function(x){sapply(1:t, function(y){paste0(as.numeric(unlist(c(output[[y]][x, 2:3]))), collapse = "")})})
ind_arcs_sankey <- do.call(rbind, lapply(1:pop_size, function(x){do.call(rbind, lapply(1:(t-1), function(y){data.frame(x = y, next_x = y+1, node = ind_arcs[[x]][y], next_node = ind_arcs[[x]][y+1])}))}))
ind_arcs_sankey$node <- factor(ind_arcs_sankey$node, levels = c("00", "10", "01", "11"))
ind_arcs_sankey$next_node <- factor(ind_arcs_sankey$next_node, levels = c("00", "10", "01", "11"))
ind_arcs_sankey
ind_arcs_sankey$node
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(0.5, t) + ylim(-350, 350) +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom")
#set parameters
pop_size <- 500
t <- 10
neg_cost <- 5
n_moves <- 7
#run model
output <- model(pop_size = pop_size, t = t, neg_cost = neg_cost, n_moves = n_moves, delta = 0, lambda = 5, pref_payoff = TRUE, static_prefs = TRUE, networked = FALSE)
ind_arcs <- lapply(1:pop_size, function(x){sapply(1:t, function(y){paste0(as.numeric(unlist(c(output[[y]][x, 2:3]))), collapse = "")})})
ind_arcs_sankey <- do.call(rbind, lapply(1:pop_size, function(x){do.call(rbind, lapply(1:(t-1), function(y){data.frame(x = y, next_x = y+1, node = ind_arcs[[x]][y], next_node = ind_arcs[[x]][y+1])}))}))
ind_arcs_sankey$node <- factor(ind_arcs_sankey$node, levels = c("00", "10", "01", "11"))
ind_arcs_sankey$next_node <- factor(ind_arcs_sankey$next_node, levels = c("00", "10", "01", "11"))
#png("~/Documents/Work/Fall 2022/Conservatism/model_plots/sankey_example.png", width = 12, height = 4, units = "in", res = 300)
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(0.5, t) + ylim(-350, 350) +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom")
setwd("~/Documents/Work/Fall 2022/Conservatism/ConservatismModel")
source("functions.R")
library(ggplot2)
library(ggsankey)
library(dplyr)
library(networkD3)
#set parameters
pop_size <- 500
t <- 10
neg_cost <- 5
n_moves <- 7
#run model
output <- model(pop_size = pop_size, t = t, neg_cost = neg_cost, n_moves = n_moves, delta = 0, lambda = 5, pref_payoff = TRUE, static_prefs = TRUE, networked = FALSE)
ind_arcs <- lapply(1:pop_size, function(x){sapply(1:t, function(y){paste0(as.numeric(unlist(c(output[[y]][x, 2:3]))), collapse = "")})})
ind_arcs_sankey <- do.call(rbind, lapply(1:pop_size, function(x){do.call(rbind, lapply(1:(t-1), function(y){data.frame(x = y, next_x = y+1, node = ind_arcs[[x]][y], next_node = ind_arcs[[x]][y+1])}))}))
ind_arcs_sankey$node <- factor(ind_arcs_sankey$node, levels = c("00", "10", "01", "11"))
ind_arcs_sankey$next_node <- factor(ind_arcs_sankey$next_node, levels = c("00", "10", "01", "11"))
png("~/Documents/Work/Fall 2022/Conservatism/model_plots/sankey_example.png", width = 12, height = 4, units = "in", res = 300)
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(0.5, t) + ylim(-350, 350) +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom")
dev.off()
png("~/Documents/Work/Fall 2022/Conservatism/model_plots/sankey_example.png", width = 10, height = 4, units = "in", res = 300)
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(0.5, t) + ylim(-350, 350) +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom")
dev.off()
png("~/Documents/Work/Fall 2022/Conservatism/model_plots/sankey_example.png", width = 8, height = 3, units = "in", res = 300)
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(0.5, t) + ylim(-350, 350) +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom")
dev.off()
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(0.5, t) + ylim(-350, 350) + ggtitle("Reinforcement") +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom", plot.title = element_text(face = "bold"))
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(0.8, t) + ylim(-350, 350) + ggtitle("Reinforcement") +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom", plot.title = element_text(face = "bold"))
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(0.9, t) + ylim(-350, 350) + ggtitle("Reinforcement") +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom", plot.title = element_text(face = "bold"))
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(0.95, t) + ylim(-350, 350) + ggtitle("Reinforcement") +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom", plot.title = element_text(face = "bold"))
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(1, t) + ylim(-350, 350) + ggtitle("Reinforcement") +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom", plot.title = element_text(face = "bold"))
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(0.98, t) + ylim(-350, 350) + ggtitle("Reinforcement") +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom", plot.title = element_text(face = "bold"))
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(0.95, t) + ylim(-350, 350) + ggtitle("Reinforcement") +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom", plot.title = element_text(face = "bold"))
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(0.95, 9.95) + ylim(-350, 350) + ggtitle("Reinforcement") +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom", plot.title = element_text(face = "bold"))
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(0.95, 10) + ylim(-350, 350) + ggtitle("Reinforcement") +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom", plot.title = element_text(face = "bold"))
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(0.95, 11) + ylim(-350, 350) + ggtitle("Reinforcement") +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom", plot.title = element_text(face = "bold"))
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(0.95, 8.5) + ylim(-350, 350) + ggtitle("Reinforcement") +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom", plot.title = element_text(face = "bold"))
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(0.95, 10) + ylim(-350, 350) + ggtitle("Reinforcement") +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom", plot.title = element_text(face = "bold"))
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(0.95, 11) + ylim(-350, 350) + ggtitle("Reinforcement") +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom", plot.title = element_text(face = "bold"))
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(-1, 12) + ylim(-350, 350) + ggtitle("Reinforcement") +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom", plot.title = element_text(face = "bold"))
setwd("~/Documents/Work/Fall 2022/Conservatism/ConservatismModel")
source("functions.R")
library(ggplot2)
library(ggsankey)
library(dplyr)
library(networkD3)
#set parameters
pop_size <- 500
t <- 11
neg_cost <- 5
n_moves <- 7
#run model
output <- model(pop_size = pop_size, t = t, neg_cost = neg_cost, n_moves = n_moves, delta = 0, lambda = 5, pref_payoff = TRUE, static_prefs = TRUE, networked = FALSE)
ind_arcs <- lapply(1:pop_size, function(x){sapply(1:t, function(y){paste0(as.numeric(unlist(c(output[[y]][x, 2:3]))), collapse = "")})})
ind_arcs_sankey <- do.call(rbind, lapply(1:pop_size, function(x){do.call(rbind, lapply(1:(t-1), function(y){data.frame(x = y, next_x = y+1, node = ind_arcs[[x]][y], next_node = ind_arcs[[x]][y+1])}))}))
ind_arcs_sankey$node <- factor(ind_arcs_sankey$node, levels = c("00", "10", "01", "11"))
ind_arcs_sankey$next_node <- factor(ind_arcs_sankey$next_node, levels = c("00", "10", "01", "11"))
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(-1, 12) + ylim(-350, 350) + ggtitle("Reinforcement") +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom", plot.title = element_text(face = "bold"))
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(1, 10) + ylim(-350, 350) + ggtitle("Reinforcement") +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom", plot.title = element_text(face = "bold"))
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(0.95, 9.95) + ylim(-350, 350) + ggtitle("Reinforcement") +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom", plot.title = element_text(face = "bold"))
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(0.95, 10.05) + ylim(-350, 350) + ggtitle("Reinforcement") +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom", plot.title = element_text(face = "bold"))
setwd("~/Documents/Work/Fall 2022/Conservatism/ConservatismModel")
source("functions.R")
library(ggplot2)
library(ggsankey)
library(dplyr)
library(networkD3)
#set parameters
pop_size <- 500
t <- 11
neg_cost <- 5
n_moves <- 7
#run model
output <- model(pop_size = pop_size, t = t, neg_cost = neg_cost, n_moves = n_moves, delta = 0, lambda = 5, pref_payoff = TRUE, static_prefs = TRUE, networked = FALSE)
ind_arcs <- lapply(1:pop_size, function(x){sapply(1:t, function(y){paste0(as.numeric(unlist(c(output[[y]][x, 2:3]))), collapse = "")})})
ind_arcs_sankey <- do.call(rbind, lapply(1:pop_size, function(x){do.call(rbind, lapply(1:(t-1), function(y){data.frame(x = y, next_x = y+1, node = ind_arcs[[x]][y], next_node = ind_arcs[[x]][y+1])}))}))
ind_arcs_sankey$node <- factor(ind_arcs_sankey$node, levels = c("00", "10", "01", "11"))
ind_arcs_sankey$next_node <- factor(ind_arcs_sankey$next_node, levels = c("00", "10", "01", "11"))
rein_plot <- ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(0.95, 10.05) + ylim(-350, 350) + ggtitle("Reinforcement") +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom", plot.title = element_text(face = "bold"))
rm(list = c("output", "ind_arcs", "ind_arcs_sankey"))
output <- model(pop_size = pop_size, t = t, neg_cost = neg_cost, n_moves = n_moves, delta = 1, lambda = 5, pref_payoff = TRUE, static_prefs = TRUE, networked = FALSE)
ind_arcs <- lapply(1:pop_size, function(x){sapply(1:t, function(y){paste0(as.numeric(unlist(c(output[[y]][x, 2:3]))), collapse = "")})})
ind_arcs_sankey <- do.call(rbind, lapply(1:pop_size, function(x){do.call(rbind, lapply(1:(t-1), function(y){data.frame(x = y, next_x = y+1, node = ind_arcs[[x]][y], next_node = ind_arcs[[x]][y+1])}))}))
ind_arcs_sankey$node <- factor(ind_arcs_sankey$node, levels = c("00", "10", "01", "11"))
ind_arcs_sankey$next_node <- factor(ind_arcs_sankey$next_node, levels = c("00", "10", "01", "11"))
rat_plot <- ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(0.95, 10.05) + ylim(-350, 350) + ggtitle("Reinforcement") +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom", plot.title = element_text(face = "bold"))
plot_grid(rein_plot + theme(legend.position = "none"), rat_plot + theme(legend.position = "none"), get_legend(rein_plot), ncol = 1, rel_heights = c(1, 1, 0.2))
library(cowplot)
plot_grid(rein_plot + theme(legend.position = "none"), rat_plot + theme(legend.position = "none"), get_legend(rein_plot), ncol = 1, rel_heights = c(1, 1, 0.2))
rat_plot <- ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
theme_void() + xlim(0.95, 10.05) + ylim(-350, 350) + ggtitle("Rational") +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom", plot.title = element_text(face = "bold"))
plot_grid(rein_plot + theme(legend.position = "none"), rat_plot + theme(legend.position = "none"),
get_legend(rein_plot), ncol = 1, rel_heights = c(1, 1, 0.2))
png("~/Documents/Work/Fall 2022/Conservatism/model_plots/sankey_example.png", width = 8, height = 8, units = "in", res = 300)
plot_grid(rein_plot + theme(legend.position = "none"), rat_plot + theme(legend.position = "none"),
get_legend(rein_plot), ncol = 1, rel_heights = c(1, 1, 0.2))
dev.off()
png("~/Documents/Work/Fall 2022/Conservatism/model_plots/sankey_example.png", width = 8, height = 5, units = "in", res = 300)
plot_grid(rein_plot + theme(legend.position = "none"), rat_plot + theme(legend.position = "none"),
get_legend(rein_plot), ncol = 1, rel_heights = c(1, 1, 0.2))
dev.off()
png("~/Documents/Work/Fall 2022/Conservatism/model_plots/sankey_example.png", width = 8, height = 5, units = "in", res = 300)
plot_grid(rein_plot + theme(legend.position = "none"), rat_plot + theme(legend.position = "none"),
get_legend(rein_plot), ncol = 1, rel_heights = c(1, 1, 0.15))
dev.off()
?geom_sankey
ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
scale_fill_manual(values = c("#CC79A7", "#D55E00", "#009E73", "#0072B2"), labels = c("00", "10", "01", "11"), drop = FALSE) +
theme_void() + xlim(0.95, 10.05) + ylim(-350, 350) + ggtitle("Rational") +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom", plot.title = element_text(face = "bold"))
setwd("~/Documents/Work/Fall 2022/Conservatism/ConservatismModel")
source("functions.R")
library(ggplot2)
library(ggsankey)
library(dplyr)
library(networkD3)
#set parameters
pop_size <- 500
t <- 11
neg_cost <- 5
n_moves <- 7
#run model
output <- model(pop_size = pop_size, t = t, neg_cost = neg_cost, n_moves = n_moves, delta = 0, lambda = 5, pref_payoff = TRUE, static_prefs = TRUE, networked = FALSE)
ind_arcs <- lapply(1:pop_size, function(x){sapply(1:t, function(y){paste0(as.numeric(unlist(c(output[[y]][x, 2:3]))), collapse = "")})})
ind_arcs_sankey <- do.call(rbind, lapply(1:pop_size, function(x){do.call(rbind, lapply(1:(t-1), function(y){data.frame(x = y, next_x = y+1, node = ind_arcs[[x]][y], next_node = ind_arcs[[x]][y+1])}))}))
ind_arcs_sankey$node <- factor(ind_arcs_sankey$node, levels = c("00", "10", "01", "11"))
ind_arcs_sankey$next_node <- factor(ind_arcs_sankey$next_node, levels = c("00", "10", "01", "11"))
rein_plot <- ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
scale_fill_manual(values = c("#CC79A7", "#D55E00", "#009E73", "#0072B2"), labels = c("00", "10", "01", "11"), drop = FALSE) +
theme_void() + xlim(0.95, 10.05) + ylim(-350, 350) + ggtitle("Reinforcement") +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom", plot.title = element_text(face = "bold"))
rm(list = c("output", "ind_arcs", "ind_arcs_sankey"))
output <- model(pop_size = pop_size, t = t, neg_cost = neg_cost, n_moves = n_moves, delta = 1, lambda = 5, pref_payoff = TRUE, static_prefs = TRUE, networked = FALSE)
ind_arcs <- lapply(1:pop_size, function(x){sapply(1:t, function(y){paste0(as.numeric(unlist(c(output[[y]][x, 2:3]))), collapse = "")})})
ind_arcs_sankey <- do.call(rbind, lapply(1:pop_size, function(x){do.call(rbind, lapply(1:(t-1), function(y){data.frame(x = y, next_x = y+1, node = ind_arcs[[x]][y], next_node = ind_arcs[[x]][y+1])}))}))
ind_arcs_sankey$node <- factor(ind_arcs_sankey$node, levels = c("00", "10", "01", "11"))
ind_arcs_sankey$next_node <- factor(ind_arcs_sankey$next_node, levels = c("00", "10", "01", "11"))
rat_plot <- ggplot(ind_arcs_sankey, aes(x = x, next_x = next_x,
node = node, next_node = next_node,
fill = node, label = node)) +
geom_sankey(flow.alpha = 0.6, space = 50, width = 0.1) +
labs(x = NULL) + theme(legend.position = "none") +
scale_fill_manual(values = c("#CC79A7", "#D55E00", "#009E73", "#0072B2"), labels = c("00", "10", "01", "11"), drop = FALSE) +
theme_void() + xlim(0.95, 10.05) + ylim(-350, 350) + ggtitle("Rational") +
guides(fill = guide_legend(title = "Strategy")) + theme(legend.position = "bottom", plot.title = element_text(face = "bold"))
library(cowplot)
png("~/Documents/Work/Fall 2022/Conservatism/model_plots/sankey_example.png", width = 8, height = 5, units = "in", res = 300)
plot_grid(rein_plot + theme(legend.position = "none"), rat_plot + theme(legend.position = "none"),
get_legend(rein_plot), ncol = 1, rel_heights = c(1, 1, 0.15))
dev.off()
